services:
  app:
    container_name: django-backend-app
    build:
      context: ..
      dockerfile: Dockerfile
    command: >
      sh -c "python sitewomen/manage.py migrate --no-input &&
             python sitewomen/manage.py loaddata resources/database/db.json && 
             gunicorn --chdir /app/sitewomen sitewomen.wsgi:application --bind 0.0.0.0:8000 --workers 3"
    ports:
      - "${API_PORT}:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fifth_laboratory
    env_file:
      - .env

  postgres:
    image: postgres:16.3-alpine
    container_name: postgres-lab-5
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_data_fifth_laboratory:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - fifth_laboratory

  pgadmin:
    image: dpage/pgadmin4:9.3.0
    container_name: pgadmin-lab-5
    env_file:
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
      - PGADMIN_CONFIG_SERVER_MODE=False
      - PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED=False
    ports:
      - ${PGADMIN_PORT}:80
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - fifth_laboratory

volumes:
  postgres_data_fifth_laboratory:

networks:
  fifth_laboratory:
    driver: bridge